use crate::error::PopulateError;
use std::result::Result;
use ironworks::sestring::SeString;
use ironworks::excel::Row;
use crate::metadata::MetadataAdapter;
impl MetadataAdapter for Action {
    fn name() -> String {
        "Action".to_string()
    }
    fn populate(row: &Row) -> Result<Self, PopulateError> {
        let offset = 0;
        Result::Ok(Action::populate(row, offset)?)
    }
}
#[derive(Debug)]
pub struct Action {
    pub r#name: SeString,
    pub r#unknown1: bool,
    pub r#icon: u16,
    pub r#action_category: u8,
    pub r#unknown4: u8,
    pub r#animation_start: u8,
    pub r#vfx: u16,
    pub r#animation_end: i16,
    pub r#action_timeline_hit: u16,
    pub r#unknown9: u8,
    pub r#class_job: i8,
    pub r#behaviour_type: u8,
    pub r#class_job_level: u8,
    pub r#is_role_action: bool,
    pub r#range: i8,
    pub r#can_target_self: bool,
    pub r#can_target_party: bool,
    pub r#can_target_friendly: bool,
    pub r#can_target_hostile: bool,
    pub r#unknown19: bool,
    pub r#unknown20: bool,
    pub r#target_area: bool,
    pub r#unknown22: bool,
    pub r#unknown23: bool,
    pub r#unknown24: i8,
    pub r#can_target_dead: bool,
    pub r#unknown26: bool,
    pub r#cast_type: u8,
    pub r#effect_range: u8,
    pub r#x_axis_modifier: u8,
    pub r#unknown30: bool,
    pub r#primary_cost_type: u8,
    pub r#primary_cost_value: u16,
    pub r#secondary_cost_type: u8,
    pub r#secondary_cost_value: u16,
    pub r#action_combo: u16,
    pub r#preserves_combo: bool,
    pub r#cast100ms: u16,
    pub r#unknown38: u8,
    pub r#recast100ms: u16,
    pub r#cooldown_group: u8,
    pub r#additional_cooldown_group: u8,
    pub r#max_charges: u8,
    pub r#attack_type: i8,
    pub r#aspect: u8,
    pub r#action_proc_status: u8,
    pub r#unknown46: u8,
    pub r#status_gain_self: u16,
    pub r#unlock_link: u32,
    pub r#class_job_category: u8,
    pub r#unknown50: u8,
    pub r#unknown51: bool,
    pub r#affects_position: bool,
    pub r#omen: u16,
    pub r#unknown54: u16,
    pub r#is_pv_p: bool,
    pub r#unknown56: bool,
    pub r#unknown57: bool,
    pub r#unknown58: bool,
    pub r#unknown59: bool,
    pub r#unknown60: bool,
    pub r#unknown61: bool,
    pub r#unknown62: bool,
    pub r#unknown63: bool,
    pub r#unknown64: u8,
    pub r#unknown65: bool,
    pub r#unknown66: bool,
    pub r#is_player_action: bool,
}
impl Action {
    pub fn populate(row: &Row, offset: usize) -> Result<Self, PopulateError> {
        Result::Ok(Self {
            r#name: row.field(0usize + offset)?.into_string()?,
            r#unknown1: row.field(1usize + offset)?.into_bool()?,
            r#icon: row.field(2usize + offset)?.into_u16()?,
            r#action_category: row.field(3usize + offset)?.into_u8()?,
            r#unknown4: row.field(4usize + offset)?.into_u8()?,
            r#animation_start: row.field(5usize + offset)?.into_u8()?,
            r#vfx: row.field(6usize + offset)?.into_u16()?,
            r#animation_end: row.field(7usize + offset)?.into_i16()?,
            r#action_timeline_hit: row.field(8usize + offset)?.into_u16()?,
            r#unknown9: row.field(9usize + offset)?.into_u8()?,
            r#class_job: row.field(10usize + offset)?.into_i8()?,
            r#behaviour_type: row.field(11usize + offset)?.into_u8()?,
            r#class_job_level: row.field(12usize + offset)?.into_u8()?,
            r#is_role_action: row.field(13usize + offset)?.into_bool()?,
            r#range: row.field(14usize + offset)?.into_i8()?,
            r#can_target_self: row.field(15usize + offset)?.into_bool()?,
            r#can_target_party: row.field(16usize + offset)?.into_bool()?,
            r#can_target_friendly: row.field(17usize + offset)?.into_bool()?,
            r#can_target_hostile: row.field(18usize + offset)?.into_bool()?,
            r#unknown19: row.field(19usize + offset)?.into_bool()?,
            r#unknown20: row.field(20usize + offset)?.into_bool()?,
            r#target_area: row.field(21usize + offset)?.into_bool()?,
            r#unknown22: row.field(22usize + offset)?.into_bool()?,
            r#unknown23: row.field(23usize + offset)?.into_bool()?,
            r#unknown24: row.field(24usize + offset)?.into_i8()?,
            r#can_target_dead: row.field(25usize + offset)?.into_bool()?,
            r#unknown26: row.field(26usize + offset)?.into_bool()?,
            r#cast_type: row.field(27usize + offset)?.into_u8()?,
            r#effect_range: row.field(28usize + offset)?.into_u8()?,
            r#x_axis_modifier: row.field(29usize + offset)?.into_u8()?,
            r#unknown30: row.field(30usize + offset)?.into_bool()?,
            r#primary_cost_type: row.field(31usize + offset)?.into_u8()?,
            r#primary_cost_value: row.field(32usize + offset)?.into_u16()?,
            r#secondary_cost_type: row.field(33usize + offset)?.into_u8()?,
            r#secondary_cost_value: row.field(34usize + offset)?.into_u16()?,
            r#action_combo: row.field(35usize + offset)?.into_u16()?,
            r#preserves_combo: row.field(36usize + offset)?.into_bool()?,
            r#cast100ms: row.field(37usize + offset)?.into_u16()?,
            r#unknown38: row.field(38usize + offset)?.into_u8()?,
            r#recast100ms: row.field(39usize + offset)?.into_u16()?,
            r#cooldown_group: row.field(40usize + offset)?.into_u8()?,
            r#additional_cooldown_group: row.field(41usize + offset)?.into_u8()?,
            r#max_charges: row.field(42usize + offset)?.into_u8()?,
            r#attack_type: row.field(43usize + offset)?.into_i8()?,
            r#aspect: row.field(44usize + offset)?.into_u8()?,
            r#action_proc_status: row.field(45usize + offset)?.into_u8()?,
            r#unknown46: row.field(46usize + offset)?.into_u8()?,
            r#status_gain_self: row.field(47usize + offset)?.into_u16()?,
            r#unlock_link: row.field(48usize + offset)?.into_u32()?,
            r#class_job_category: row.field(49usize + offset)?.into_u8()?,
            r#unknown50: row.field(50usize + offset)?.into_u8()?,
            r#unknown51: row.field(51usize + offset)?.into_bool()?,
            r#affects_position: row.field(52usize + offset)?.into_bool()?,
            r#omen: row.field(53usize + offset)?.into_u16()?,
            r#unknown54: row.field(54usize + offset)?.into_u16()?,
            r#is_pv_p: row.field(55usize + offset)?.into_bool()?,
            r#unknown56: row.field(56usize + offset)?.into_bool()?,
            r#unknown57: row.field(57usize + offset)?.into_bool()?,
            r#unknown58: row.field(58usize + offset)?.into_bool()?,
            r#unknown59: row.field(59usize + offset)?.into_bool()?,
            r#unknown60: row.field(60usize + offset)?.into_bool()?,
            r#unknown61: row.field(61usize + offset)?.into_bool()?,
            r#unknown62: row.field(62usize + offset)?.into_bool()?,
            r#unknown63: row.field(63usize + offset)?.into_bool()?,
            r#unknown64: row.field(64usize + offset)?.into_u8()?,
            r#unknown65: row.field(65usize + offset)?.into_bool()?,
            r#unknown66: row.field(66usize + offset)?.into_bool()?,
            r#is_player_action: row.field(67usize + offset)?.into_bool()?,
        })
    }
}
