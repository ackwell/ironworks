use std::result::Result;
use std::vec::Vec;
use crate::utility::read_array;
use ironworks::excel::Row;
use crate::metadata::MetadataAdapter;
use crate::error::PopulateError;
impl MetadataAdapter for ENpcBase {
    fn name() -> String {
        "ENpcBase".to_string()
    }
    fn populate(row: &Row) -> Result<Self, PopulateError> {
        let offset = 0;
        Result::Ok(ENpcBase::populate(row, offset)?)
    }
}
#[derive(Debug)]
pub struct ENpcBase {
    pub r#event_handler: u16,
    pub r#important: bool,
    pub r#e_npc_data: Vec<u32>,
    pub r#scale: f32,
    pub r#model_chara: u16,
    pub r#race: u8,
    pub r#gender: u8,
    pub r#body_type: u8,
    pub r#height: u8,
    pub r#tribe: u8,
    pub r#face: u8,
    pub r#hair_style: u8,
    pub r#hair_highlight: u8,
    pub r#skin_color: u8,
    pub r#eye_heterochromia: u8,
    pub r#hair_color: u8,
    pub r#hair_highlight_color: u8,
    pub r#facial_feature: u8,
    pub r#facial_feature_color: u8,
    pub r#eyebrows: u8,
    pub r#eye_color: u8,
    pub r#eye_shape: u8,
    pub r#nose: u8,
    pub r#jaw: u8,
    pub r#mouth: u8,
    pub r#lip_color: u8,
    pub r#bust_or_tone1: u8,
    pub r#extra_feature1: u8,
    pub r#extra_feature2_or_bust: u8,
    pub r#face_paint: u8,
    pub r#face_paint_color: u8,
    pub r#unknown62: u8,
    pub r#npc_equip: u16,
    pub r#behavior: u16,
    pub r#model_main_hand: u64,
    pub r#dye_main_hand: u8,
    pub r#model_off_hand: u64,
    pub r#dye_off_hand: u8,
    pub r#model_head: u32,
    pub r#dye_head: u8,
    pub r#visor: bool,
    pub r#model_body: u32,
    pub r#dye_body: u8,
    pub r#model_hands: u32,
    pub r#dye_hands: u8,
    pub r#model_legs: u32,
    pub r#dye_legs: u8,
    pub r#model_feet: u32,
    pub r#dye_feet: u8,
    pub r#model_ears: u32,
    pub r#dye_ears: u8,
    pub r#model_neck: u32,
    pub r#dye_neck: u8,
    pub r#model_wrists: u32,
    pub r#dye_wrists: u8,
    pub r#model_left_ring: u32,
    pub r#dye_left_ring: u8,
    pub r#model_right_ring: u32,
    pub r#dye_right_ring: u8,
    pub r#invisibility: u8,
    pub r#balloon: u16,
    pub r#not_rewrite_height: bool,
    pub r#default_balloon: u8,
}
impl ENpcBase {
    pub fn populate(row: &Row, offset: usize) -> Result<Self, PopulateError> {
        Result::Ok(Self {
            r#event_handler: row.field(0usize + offset)?.into_u16()?,
            r#important: row.field(1usize + offset)?.into_bool()?,
            r#e_npc_data: read_array(
                offset,
                32usize,
                1usize,
                |offset| { Result::Ok(row.field(2usize + offset)?.into_u32()?) },
            )?,
            r#scale: row.field(34usize + offset)?.into_f32()?,
            r#model_chara: row.field(35usize + offset)?.into_u16()?,
            r#race: row.field(36usize + offset)?.into_u8()?,
            r#gender: row.field(37usize + offset)?.into_u8()?,
            r#body_type: row.field(38usize + offset)?.into_u8()?,
            r#height: row.field(39usize + offset)?.into_u8()?,
            r#tribe: row.field(40usize + offset)?.into_u8()?,
            r#face: row.field(41usize + offset)?.into_u8()?,
            r#hair_style: row.field(42usize + offset)?.into_u8()?,
            r#hair_highlight: row.field(43usize + offset)?.into_u8()?,
            r#skin_color: row.field(44usize + offset)?.into_u8()?,
            r#eye_heterochromia: row.field(45usize + offset)?.into_u8()?,
            r#hair_color: row.field(46usize + offset)?.into_u8()?,
            r#hair_highlight_color: row.field(47usize + offset)?.into_u8()?,
            r#facial_feature: row.field(48usize + offset)?.into_u8()?,
            r#facial_feature_color: row.field(49usize + offset)?.into_u8()?,
            r#eyebrows: row.field(50usize + offset)?.into_u8()?,
            r#eye_color: row.field(51usize + offset)?.into_u8()?,
            r#eye_shape: row.field(52usize + offset)?.into_u8()?,
            r#nose: row.field(53usize + offset)?.into_u8()?,
            r#jaw: row.field(54usize + offset)?.into_u8()?,
            r#mouth: row.field(55usize + offset)?.into_u8()?,
            r#lip_color: row.field(56usize + offset)?.into_u8()?,
            r#bust_or_tone1: row.field(57usize + offset)?.into_u8()?,
            r#extra_feature1: row.field(58usize + offset)?.into_u8()?,
            r#extra_feature2_or_bust: row.field(59usize + offset)?.into_u8()?,
            r#face_paint: row.field(60usize + offset)?.into_u8()?,
            r#face_paint_color: row.field(61usize + offset)?.into_u8()?,
            r#unknown62: row.field(62usize + offset)?.into_u8()?,
            r#npc_equip: row.field(63usize + offset)?.into_u16()?,
            r#behavior: row.field(64usize + offset)?.into_u16()?,
            r#model_main_hand: row.field(65usize + offset)?.into_u64()?,
            r#dye_main_hand: row.field(66usize + offset)?.into_u8()?,
            r#model_off_hand: row.field(67usize + offset)?.into_u64()?,
            r#dye_off_hand: row.field(68usize + offset)?.into_u8()?,
            r#model_head: row.field(69usize + offset)?.into_u32()?,
            r#dye_head: row.field(70usize + offset)?.into_u8()?,
            r#visor: row.field(71usize + offset)?.into_bool()?,
            r#model_body: row.field(72usize + offset)?.into_u32()?,
            r#dye_body: row.field(73usize + offset)?.into_u8()?,
            r#model_hands: row.field(74usize + offset)?.into_u32()?,
            r#dye_hands: row.field(75usize + offset)?.into_u8()?,
            r#model_legs: row.field(76usize + offset)?.into_u32()?,
            r#dye_legs: row.field(77usize + offset)?.into_u8()?,
            r#model_feet: row.field(78usize + offset)?.into_u32()?,
            r#dye_feet: row.field(79usize + offset)?.into_u8()?,
            r#model_ears: row.field(80usize + offset)?.into_u32()?,
            r#dye_ears: row.field(81usize + offset)?.into_u8()?,
            r#model_neck: row.field(82usize + offset)?.into_u32()?,
            r#dye_neck: row.field(83usize + offset)?.into_u8()?,
            r#model_wrists: row.field(84usize + offset)?.into_u32()?,
            r#dye_wrists: row.field(85usize + offset)?.into_u8()?,
            r#model_left_ring: row.field(86usize + offset)?.into_u32()?,
            r#dye_left_ring: row.field(87usize + offset)?.into_u8()?,
            r#model_right_ring: row.field(88usize + offset)?.into_u32()?,
            r#dye_right_ring: row.field(89usize + offset)?.into_u8()?,
            r#invisibility: row.field(90usize + offset)?.into_u8()?,
            r#balloon: row.field(91usize + offset)?.into_u16()?,
            r#not_rewrite_height: row.field(92usize + offset)?.into_bool()?,
            r#default_balloon: row.field(93usize + offset)?.into_u8()?,
        })
    }
}
