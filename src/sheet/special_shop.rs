use crate::error::PopulateError;
use std::vec::Vec;
use std::result::Result;
use ironworks::excel::Row;
use crate::metadata::MetadataAdapter;
use crate::utility::read_array;
use ironworks::sestring::SeString;
impl MetadataAdapter for SpecialShop {
    fn name() -> String {
        "SpecialShop".to_string()
    }
    fn populate(row: &Row) -> Result<Self, PopulateError> {
        let offset = 0;
        Result::Ok(SpecialShop::populate(row, offset)?)
    }
}
#[derive(Debug)]
pub struct SpecialShop_ecie {
    pub r#item_receive: Vec<i32>,
    pub r#count_receive: Vec<u32>,
    pub r#special_shop_item_category: Vec<i32>,
    pub r#hq_receive: Vec<bool>,
}
impl SpecialShop_ecie {
    pub fn populate(row: &Row, offset: usize) -> Result<Self, PopulateError> {
        Result::Ok(Self {
            r#item_receive: read_array(
                offset,
                60usize,
                1usize,
                |offset| { Result::Ok(row.field(1usize + offset)?.into_i32()?) },
            )?,
            r#count_receive: read_array(
                offset,
                60usize,
                1usize,
                |offset| { Result::Ok(row.field(61usize + offset)?.into_u32()?) },
            )?,
            r#special_shop_item_category: read_array(
                offset,
                60usize,
                1usize,
                |offset| { Result::Ok(row.field(121usize + offset)?.into_i32()?) },
            )?,
            r#hq_receive: read_array(
                offset,
                60usize,
                1usize,
                |offset| { Result::Ok(row.field(181usize + offset)?.into_bool()?) },
            )?,
        })
    }
}
#[derive(Debug)]
pub struct SpecialShop_Cost {
    pub r#item_cost: Vec<i32>,
    pub r#count_cost: Vec<u32>,
    pub r#hq_cost: Vec<u8>,
    pub r#collectability_rating_cost: Vec<u16>,
}
impl SpecialShop_Cost {
    pub fn populate(row: &Row, offset: usize) -> Result<Self, PopulateError> {
        Result::Ok(Self {
            r#item_cost: read_array(
                offset,
                60usize,
                1usize,
                |offset| { Result::Ok(row.field(481usize + offset)?.into_i32()?) },
            )?,
            r#count_cost: read_array(
                offset,
                60usize,
                1usize,
                |offset| { Result::Ok(row.field(541usize + offset)?.into_u32()?) },
            )?,
            r#hq_cost: read_array(
                offset,
                60usize,
                1usize,
                |offset| { Result::Ok(row.field(601usize + offset)?.into_u8()?) },
            )?,
            r#collectability_rating_cost: read_array(
                offset,
                60usize,
                1usize,
                |offset| { Result::Ok(row.field(661usize + offset)?.into_u16()?) },
            )?,
        })
    }
}
#[derive(Debug)]
pub struct SpecialShop {
    pub r#name: SeString,
    pub r#ecie: Vec<SpecialShop_ecie>,
    pub r#cost: Vec<SpecialShop_Cost>,
    pub r#quest_item: Vec<i32>,
    pub r#unknown1261: i32,
    pub r#unknown1262: i32,
    pub r#unknown1263: i32,
    pub r#unknown1264: i32,
    pub r#unknown1265: i32,
    pub r#unknown1266: i32,
    pub r#unknown1267: i32,
    pub r#unknown1268: i32,
    pub r#unknown1269: i32,
    pub r#unknown1270: i32,
    pub r#unknown1271: i32,
    pub r#unknown1272: i32,
    pub r#unknown1273: i32,
    pub r#unknown1274: i32,
    pub r#unknown1275: i32,
    pub r#unknown1276: i32,
    pub r#unknown1277: i32,
    pub r#unknown1278: i32,
    pub r#unknown1279: i32,
    pub r#unknown1280: i32,
    pub r#unknown1281: i32,
    pub r#unknown1282: i32,
    pub r#unknown1283: i32,
    pub r#unknown1284: i32,
    pub r#unknown1285: i32,
    pub r#unknown1286: i32,
    pub r#unknown1287: i32,
    pub r#unknown1288: i32,
    pub r#unknown1289: i32,
    pub r#unknown1290: i32,
    pub r#unknown1291: i32,
    pub r#unknown1292: i32,
    pub r#unknown1293: i32,
    pub r#unknown1294: i32,
    pub r#unknown1295: i32,
    pub r#unknown1296: i32,
    pub r#unknown1297: i32,
    pub r#unknown1298: i32,
    pub r#unknown1299: i32,
    pub r#unknown1300: i32,
    pub r#unknown1301: i32,
    pub r#unknown1302: i32,
    pub r#unknown1303: i32,
    pub r#unknown1304: i32,
    pub r#unknown1305: i32,
    pub r#unknown1306: i32,
    pub r#unknown1307: i32,
    pub r#unknown1308: i32,
    pub r#unknown1309: i32,
    pub r#unknown1310: i32,
    pub r#unknown1311: i32,
    pub r#unknown1312: i32,
    pub r#unknown1313: i32,
    pub r#unknown1314: i32,
    pub r#unknown1315: i32,
    pub r#unknown1316: i32,
    pub r#unknown1317: i32,
    pub r#unknown1318: i32,
    pub r#unknown1319: i32,
    pub r#unknown1320: i32,
    pub r#achievement_unlock: Vec<i32>,
    pub r#unknown1381: u8,
    pub r#unknown1382: u8,
    pub r#unknown1383: u8,
    pub r#unknown1384: u8,
    pub r#unknown1385: u8,
    pub r#unknown1386: u8,
    pub r#unknown1387: u8,
    pub r#unknown1388: u8,
    pub r#unknown1389: u8,
    pub r#unknown1390: u8,
    pub r#unknown1391: u8,
    pub r#unknown1392: u8,
    pub r#unknown1393: u8,
    pub r#unknown1394: u8,
    pub r#unknown1395: u8,
    pub r#unknown1396: u8,
    pub r#unknown1397: u8,
    pub r#unknown1398: u8,
    pub r#unknown1399: u8,
    pub r#unknown1400: u8,
    pub r#unknown1401: u8,
    pub r#unknown1402: u8,
    pub r#unknown1403: u8,
    pub r#unknown1404: u8,
    pub r#unknown1405: u8,
    pub r#unknown1406: u8,
    pub r#unknown1407: u8,
    pub r#unknown1408: u8,
    pub r#unknown1409: u8,
    pub r#unknown1410: u8,
    pub r#unknown1411: u8,
    pub r#unknown1412: u8,
    pub r#unknown1413: u8,
    pub r#unknown1414: u8,
    pub r#unknown1415: u8,
    pub r#unknown1416: u8,
    pub r#unknown1417: u8,
    pub r#unknown1418: u8,
    pub r#unknown1419: u8,
    pub r#unknown1420: u8,
    pub r#unknown1421: u8,
    pub r#unknown1422: u8,
    pub r#unknown1423: u8,
    pub r#unknown1424: u8,
    pub r#unknown1425: u8,
    pub r#unknown1426: u8,
    pub r#unknown1427: u8,
    pub r#unknown1428: u8,
    pub r#unknown1429: u8,
    pub r#unknown1430: u8,
    pub r#unknown1431: u8,
    pub r#unknown1432: u8,
    pub r#unknown1433: u8,
    pub r#unknown1434: u8,
    pub r#unknown1435: u8,
    pub r#unknown1436: u8,
    pub r#unknown1437: u8,
    pub r#unknown1438: u8,
    pub r#unknown1439: u8,
    pub r#unknown1440: u8,
    pub r#patch_number: Vec<u16>,
    pub r#use_currency_type: u8,
    pub r#quest_unlock: u32,
    pub r#complete_text: i32,
    pub r#not_complete_text: i32,
}
impl SpecialShop {
    pub fn populate(row: &Row, offset: usize) -> Result<Self, PopulateError> {
        Result::Ok(Self {
            r#name: row.field(0usize + offset)?.into_string()?,
            r#ecie: read_array(
                offset,
                2usize,
                240usize,
                |offset| { Result::Ok(SpecialShop_ecie::populate(row, offset)?) },
            )?,
            r#cost: read_array(
                offset,
                3usize,
                240usize,
                |offset| { Result::Ok(SpecialShop_Cost::populate(row, offset)?) },
            )?,
            r#quest_item: read_array(
                offset,
                60usize,
                1usize,
                |offset| { Result::Ok(row.field(1201usize + offset)?.into_i32()?) },
            )?,
            r#unknown1261: row.field(1261usize + offset)?.into_i32()?,
            r#unknown1262: row.field(1262usize + offset)?.into_i32()?,
            r#unknown1263: row.field(1263usize + offset)?.into_i32()?,
            r#unknown1264: row.field(1264usize + offset)?.into_i32()?,
            r#unknown1265: row.field(1265usize + offset)?.into_i32()?,
            r#unknown1266: row.field(1266usize + offset)?.into_i32()?,
            r#unknown1267: row.field(1267usize + offset)?.into_i32()?,
            r#unknown1268: row.field(1268usize + offset)?.into_i32()?,
            r#unknown1269: row.field(1269usize + offset)?.into_i32()?,
            r#unknown1270: row.field(1270usize + offset)?.into_i32()?,
            r#unknown1271: row.field(1271usize + offset)?.into_i32()?,
            r#unknown1272: row.field(1272usize + offset)?.into_i32()?,
            r#unknown1273: row.field(1273usize + offset)?.into_i32()?,
            r#unknown1274: row.field(1274usize + offset)?.into_i32()?,
            r#unknown1275: row.field(1275usize + offset)?.into_i32()?,
            r#unknown1276: row.field(1276usize + offset)?.into_i32()?,
            r#unknown1277: row.field(1277usize + offset)?.into_i32()?,
            r#unknown1278: row.field(1278usize + offset)?.into_i32()?,
            r#unknown1279: row.field(1279usize + offset)?.into_i32()?,
            r#unknown1280: row.field(1280usize + offset)?.into_i32()?,
            r#unknown1281: row.field(1281usize + offset)?.into_i32()?,
            r#unknown1282: row.field(1282usize + offset)?.into_i32()?,
            r#unknown1283: row.field(1283usize + offset)?.into_i32()?,
            r#unknown1284: row.field(1284usize + offset)?.into_i32()?,
            r#unknown1285: row.field(1285usize + offset)?.into_i32()?,
            r#unknown1286: row.field(1286usize + offset)?.into_i32()?,
            r#unknown1287: row.field(1287usize + offset)?.into_i32()?,
            r#unknown1288: row.field(1288usize + offset)?.into_i32()?,
            r#unknown1289: row.field(1289usize + offset)?.into_i32()?,
            r#unknown1290: row.field(1290usize + offset)?.into_i32()?,
            r#unknown1291: row.field(1291usize + offset)?.into_i32()?,
            r#unknown1292: row.field(1292usize + offset)?.into_i32()?,
            r#unknown1293: row.field(1293usize + offset)?.into_i32()?,
            r#unknown1294: row.field(1294usize + offset)?.into_i32()?,
            r#unknown1295: row.field(1295usize + offset)?.into_i32()?,
            r#unknown1296: row.field(1296usize + offset)?.into_i32()?,
            r#unknown1297: row.field(1297usize + offset)?.into_i32()?,
            r#unknown1298: row.field(1298usize + offset)?.into_i32()?,
            r#unknown1299: row.field(1299usize + offset)?.into_i32()?,
            r#unknown1300: row.field(1300usize + offset)?.into_i32()?,
            r#unknown1301: row.field(1301usize + offset)?.into_i32()?,
            r#unknown1302: row.field(1302usize + offset)?.into_i32()?,
            r#unknown1303: row.field(1303usize + offset)?.into_i32()?,
            r#unknown1304: row.field(1304usize + offset)?.into_i32()?,
            r#unknown1305: row.field(1305usize + offset)?.into_i32()?,
            r#unknown1306: row.field(1306usize + offset)?.into_i32()?,
            r#unknown1307: row.field(1307usize + offset)?.into_i32()?,
            r#unknown1308: row.field(1308usize + offset)?.into_i32()?,
            r#unknown1309: row.field(1309usize + offset)?.into_i32()?,
            r#unknown1310: row.field(1310usize + offset)?.into_i32()?,
            r#unknown1311: row.field(1311usize + offset)?.into_i32()?,
            r#unknown1312: row.field(1312usize + offset)?.into_i32()?,
            r#unknown1313: row.field(1313usize + offset)?.into_i32()?,
            r#unknown1314: row.field(1314usize + offset)?.into_i32()?,
            r#unknown1315: row.field(1315usize + offset)?.into_i32()?,
            r#unknown1316: row.field(1316usize + offset)?.into_i32()?,
            r#unknown1317: row.field(1317usize + offset)?.into_i32()?,
            r#unknown1318: row.field(1318usize + offset)?.into_i32()?,
            r#unknown1319: row.field(1319usize + offset)?.into_i32()?,
            r#unknown1320: row.field(1320usize + offset)?.into_i32()?,
            r#achievement_unlock: read_array(
                offset,
                60usize,
                1usize,
                |offset| { Result::Ok(row.field(1321usize + offset)?.into_i32()?) },
            )?,
            r#unknown1381: row.field(1381usize + offset)?.into_u8()?,
            r#unknown1382: row.field(1382usize + offset)?.into_u8()?,
            r#unknown1383: row.field(1383usize + offset)?.into_u8()?,
            r#unknown1384: row.field(1384usize + offset)?.into_u8()?,
            r#unknown1385: row.field(1385usize + offset)?.into_u8()?,
            r#unknown1386: row.field(1386usize + offset)?.into_u8()?,
            r#unknown1387: row.field(1387usize + offset)?.into_u8()?,
            r#unknown1388: row.field(1388usize + offset)?.into_u8()?,
            r#unknown1389: row.field(1389usize + offset)?.into_u8()?,
            r#unknown1390: row.field(1390usize + offset)?.into_u8()?,
            r#unknown1391: row.field(1391usize + offset)?.into_u8()?,
            r#unknown1392: row.field(1392usize + offset)?.into_u8()?,
            r#unknown1393: row.field(1393usize + offset)?.into_u8()?,
            r#unknown1394: row.field(1394usize + offset)?.into_u8()?,
            r#unknown1395: row.field(1395usize + offset)?.into_u8()?,
            r#unknown1396: row.field(1396usize + offset)?.into_u8()?,
            r#unknown1397: row.field(1397usize + offset)?.into_u8()?,
            r#unknown1398: row.field(1398usize + offset)?.into_u8()?,
            r#unknown1399: row.field(1399usize + offset)?.into_u8()?,
            r#unknown1400: row.field(1400usize + offset)?.into_u8()?,
            r#unknown1401: row.field(1401usize + offset)?.into_u8()?,
            r#unknown1402: row.field(1402usize + offset)?.into_u8()?,
            r#unknown1403: row.field(1403usize + offset)?.into_u8()?,
            r#unknown1404: row.field(1404usize + offset)?.into_u8()?,
            r#unknown1405: row.field(1405usize + offset)?.into_u8()?,
            r#unknown1406: row.field(1406usize + offset)?.into_u8()?,
            r#unknown1407: row.field(1407usize + offset)?.into_u8()?,
            r#unknown1408: row.field(1408usize + offset)?.into_u8()?,
            r#unknown1409: row.field(1409usize + offset)?.into_u8()?,
            r#unknown1410: row.field(1410usize + offset)?.into_u8()?,
            r#unknown1411: row.field(1411usize + offset)?.into_u8()?,
            r#unknown1412: row.field(1412usize + offset)?.into_u8()?,
            r#unknown1413: row.field(1413usize + offset)?.into_u8()?,
            r#unknown1414: row.field(1414usize + offset)?.into_u8()?,
            r#unknown1415: row.field(1415usize + offset)?.into_u8()?,
            r#unknown1416: row.field(1416usize + offset)?.into_u8()?,
            r#unknown1417: row.field(1417usize + offset)?.into_u8()?,
            r#unknown1418: row.field(1418usize + offset)?.into_u8()?,
            r#unknown1419: row.field(1419usize + offset)?.into_u8()?,
            r#unknown1420: row.field(1420usize + offset)?.into_u8()?,
            r#unknown1421: row.field(1421usize + offset)?.into_u8()?,
            r#unknown1422: row.field(1422usize + offset)?.into_u8()?,
            r#unknown1423: row.field(1423usize + offset)?.into_u8()?,
            r#unknown1424: row.field(1424usize + offset)?.into_u8()?,
            r#unknown1425: row.field(1425usize + offset)?.into_u8()?,
            r#unknown1426: row.field(1426usize + offset)?.into_u8()?,
            r#unknown1427: row.field(1427usize + offset)?.into_u8()?,
            r#unknown1428: row.field(1428usize + offset)?.into_u8()?,
            r#unknown1429: row.field(1429usize + offset)?.into_u8()?,
            r#unknown1430: row.field(1430usize + offset)?.into_u8()?,
            r#unknown1431: row.field(1431usize + offset)?.into_u8()?,
            r#unknown1432: row.field(1432usize + offset)?.into_u8()?,
            r#unknown1433: row.field(1433usize + offset)?.into_u8()?,
            r#unknown1434: row.field(1434usize + offset)?.into_u8()?,
            r#unknown1435: row.field(1435usize + offset)?.into_u8()?,
            r#unknown1436: row.field(1436usize + offset)?.into_u8()?,
            r#unknown1437: row.field(1437usize + offset)?.into_u8()?,
            r#unknown1438: row.field(1438usize + offset)?.into_u8()?,
            r#unknown1439: row.field(1439usize + offset)?.into_u8()?,
            r#unknown1440: row.field(1440usize + offset)?.into_u8()?,
            r#patch_number: read_array(
                offset,
                60usize,
                1usize,
                |offset| { Result::Ok(row.field(1441usize + offset)?.into_u16()?) },
            )?,
            r#use_currency_type: row.field(1501usize + offset)?.into_u8()?,
            r#quest_unlock: row.field(1502usize + offset)?.into_u32()?,
            r#complete_text: row.field(1503usize + offset)?.into_i32()?,
            r#not_complete_text: row.field(1504usize + offset)?.into_i32()?,
        })
    }
}
