use ironworks::excel::Row;
use std::result::Result;
use crate::error::PopulateError;
use crate::metadata::MetadataAdapter;
impl MetadataAdapter for ItemLevel {
    fn name() -> String {
        "ItemLevel".to_string()
    }
    fn populate(row: &Row) -> Result<Self, PopulateError> {
        let offset = 0;
        Result::Ok(ItemLevel::populate(row, offset)?)
    }
}
#[derive(Debug)]
pub struct ItemLevel {
    pub r#strength: u16,
    pub r#dexterity: u16,
    pub r#vitality: u16,
    pub r#intelligence: u16,
    pub r#mind: u16,
    pub r#piety: u16,
    pub r#hp: u16,
    pub r#mp: u16,
    pub r#tp: u16,
    pub r#gp: u16,
    pub r#cp: u16,
    pub r#physical_damage: u16,
    pub r#magical_damage: u16,
    pub r#delay: u16,
    pub r#additional_effect: u16,
    pub r#attack_speed: u16,
    pub r#block_rate: u16,
    pub r#block_strength: u16,
    pub r#tenacity: u16,
    pub r#attack_power: u16,
    pub r#defense: u16,
    pub r#direct_hit_rate: u16,
    pub r#evasion: u16,
    pub r#magic_defense: u16,
    pub r#critical_hit_power: u16,
    pub r#critical_hit_resilience: u16,
    pub r#critical_hit: u16,
    pub r#critical_hit_evasion: u16,
    pub r#slashing_resistance: u16,
    pub r#piercing_resistance: u16,
    pub r#blunt_resistance: u16,
    pub r#projectile_resistance: u16,
    pub r#attack_magic_potency: u16,
    pub r#healing_magic_potency: u16,
    pub r#enhancement_magic_potency: u16,
    pub r#enfeebling_magic_potency: u16,
    pub r#fire_resistance: u16,
    pub r#ice_resistance: u16,
    pub r#wind_resistance: u16,
    pub r#earth_resistance: u16,
    pub r#lightning_resistance: u16,
    pub r#water_resistance: u16,
    pub r#magic_resistance: u16,
    pub r#determination: u16,
    pub r#skill_speed: u16,
    pub r#spell_speed: u16,
    pub r#haste: u16,
    pub r#morale: u16,
    pub r#enmity: u16,
    pub r#enmity_reduction: u16,
    pub r#careful_desynthesis: u16,
    pub r#exp_bonus: u16,
    pub r#regen: u16,
    pub r#refresh: u16,
    pub r#movement_speed: u16,
    pub r#spikes: u16,
    pub r#slow_resistance: u16,
    pub r#petrification_resistance: u16,
    pub r#paralysis_resistance: u16,
    pub r#silence_resistance: u16,
    pub r#blind_resistance: u16,
    pub r#poison_resistance: u16,
    pub r#stun_resistance: u16,
    pub r#sleep_resistance: u16,
    pub r#bind_resistance: u16,
    pub r#heavy_resistance: u16,
    pub r#doom_resistance: u16,
    pub r#reduced_durability_loss: u16,
    pub r#increased_spiritbond_gain: u16,
    pub r#craftsmanship: u16,
    pub r#control: u16,
    pub r#gathering: u16,
    pub r#perception: u16,
}
impl ItemLevel {
    pub fn populate(row: &Row, offset: usize) -> Result<Self, PopulateError> {
        Result::Ok(Self {
            r#strength: row.field(0usize + offset)?.into_u16()?,
            r#dexterity: row.field(1usize + offset)?.into_u16()?,
            r#vitality: row.field(2usize + offset)?.into_u16()?,
            r#intelligence: row.field(3usize + offset)?.into_u16()?,
            r#mind: row.field(4usize + offset)?.into_u16()?,
            r#piety: row.field(5usize + offset)?.into_u16()?,
            r#hp: row.field(6usize + offset)?.into_u16()?,
            r#mp: row.field(7usize + offset)?.into_u16()?,
            r#tp: row.field(8usize + offset)?.into_u16()?,
            r#gp: row.field(9usize + offset)?.into_u16()?,
            r#cp: row.field(10usize + offset)?.into_u16()?,
            r#physical_damage: row.field(11usize + offset)?.into_u16()?,
            r#magical_damage: row.field(12usize + offset)?.into_u16()?,
            r#delay: row.field(13usize + offset)?.into_u16()?,
            r#additional_effect: row.field(14usize + offset)?.into_u16()?,
            r#attack_speed: row.field(15usize + offset)?.into_u16()?,
            r#block_rate: row.field(16usize + offset)?.into_u16()?,
            r#block_strength: row.field(17usize + offset)?.into_u16()?,
            r#tenacity: row.field(18usize + offset)?.into_u16()?,
            r#attack_power: row.field(19usize + offset)?.into_u16()?,
            r#defense: row.field(20usize + offset)?.into_u16()?,
            r#direct_hit_rate: row.field(21usize + offset)?.into_u16()?,
            r#evasion: row.field(22usize + offset)?.into_u16()?,
            r#magic_defense: row.field(23usize + offset)?.into_u16()?,
            r#critical_hit_power: row.field(24usize + offset)?.into_u16()?,
            r#critical_hit_resilience: row.field(25usize + offset)?.into_u16()?,
            r#critical_hit: row.field(26usize + offset)?.into_u16()?,
            r#critical_hit_evasion: row.field(27usize + offset)?.into_u16()?,
            r#slashing_resistance: row.field(28usize + offset)?.into_u16()?,
            r#piercing_resistance: row.field(29usize + offset)?.into_u16()?,
            r#blunt_resistance: row.field(30usize + offset)?.into_u16()?,
            r#projectile_resistance: row.field(31usize + offset)?.into_u16()?,
            r#attack_magic_potency: row.field(32usize + offset)?.into_u16()?,
            r#healing_magic_potency: row.field(33usize + offset)?.into_u16()?,
            r#enhancement_magic_potency: row.field(34usize + offset)?.into_u16()?,
            r#enfeebling_magic_potency: row.field(35usize + offset)?.into_u16()?,
            r#fire_resistance: row.field(36usize + offset)?.into_u16()?,
            r#ice_resistance: row.field(37usize + offset)?.into_u16()?,
            r#wind_resistance: row.field(38usize + offset)?.into_u16()?,
            r#earth_resistance: row.field(39usize + offset)?.into_u16()?,
            r#lightning_resistance: row.field(40usize + offset)?.into_u16()?,
            r#water_resistance: row.field(41usize + offset)?.into_u16()?,
            r#magic_resistance: row.field(42usize + offset)?.into_u16()?,
            r#determination: row.field(43usize + offset)?.into_u16()?,
            r#skill_speed: row.field(44usize + offset)?.into_u16()?,
            r#spell_speed: row.field(45usize + offset)?.into_u16()?,
            r#haste: row.field(46usize + offset)?.into_u16()?,
            r#morale: row.field(47usize + offset)?.into_u16()?,
            r#enmity: row.field(48usize + offset)?.into_u16()?,
            r#enmity_reduction: row.field(49usize + offset)?.into_u16()?,
            r#careful_desynthesis: row.field(50usize + offset)?.into_u16()?,
            r#exp_bonus: row.field(51usize + offset)?.into_u16()?,
            r#regen: row.field(52usize + offset)?.into_u16()?,
            r#refresh: row.field(53usize + offset)?.into_u16()?,
            r#movement_speed: row.field(54usize + offset)?.into_u16()?,
            r#spikes: row.field(55usize + offset)?.into_u16()?,
            r#slow_resistance: row.field(56usize + offset)?.into_u16()?,
            r#petrification_resistance: row.field(57usize + offset)?.into_u16()?,
            r#paralysis_resistance: row.field(58usize + offset)?.into_u16()?,
            r#silence_resistance: row.field(59usize + offset)?.into_u16()?,
            r#blind_resistance: row.field(60usize + offset)?.into_u16()?,
            r#poison_resistance: row.field(61usize + offset)?.into_u16()?,
            r#stun_resistance: row.field(62usize + offset)?.into_u16()?,
            r#sleep_resistance: row.field(63usize + offset)?.into_u16()?,
            r#bind_resistance: row.field(64usize + offset)?.into_u16()?,
            r#heavy_resistance: row.field(65usize + offset)?.into_u16()?,
            r#doom_resistance: row.field(66usize + offset)?.into_u16()?,
            r#reduced_durability_loss: row.field(67usize + offset)?.into_u16()?,
            r#increased_spiritbond_gain: row.field(68usize + offset)?.into_u16()?,
            r#craftsmanship: row.field(69usize + offset)?.into_u16()?,
            r#control: row.field(70usize + offset)?.into_u16()?,
            r#gathering: row.field(71usize + offset)?.into_u16()?,
            r#perception: row.field(72usize + offset)?.into_u16()?,
        })
    }
}
