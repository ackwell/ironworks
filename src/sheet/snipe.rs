use std::result::Result;
use crate::metadata::MetadataAdapter;
use ironworks::excel::Row;
use ironworks::sestring::SeString;
use std::vec::Vec;
use crate::error::PopulateError;
use crate::utility::read_array;
impl MetadataAdapter for Snipe {
    fn name() -> String {
        "Snipe".to_string()
    }
    fn populate(row: &Row) -> Result<Self, PopulateError> {
        let offset = 0;
        Result::Ok(Snipe::populate(row, offset)?)
    }
}
#[derive(Debug)]
pub struct Snipe {
    pub r#lgb_target_marker: u32,
    pub r#unknown1: u16,
    pub r#unknown2: bool,
    pub r#unknown3: u8,
    pub r#unknown4: u8,
    pub r#unknown5: u8,
    pub r#unknown6: u8,
    pub r#unknown7: u8,
    pub r#unknown8: u16,
    pub r#unknown9: u8,
    pub r#unknown10: u8,
    pub r#vfx_fire: SeString,
    pub r#vfx_hit: SeString,
    pub r#vfx_miss: SeString,
    pub r#vfx_additional: SeString,
    pub r#unknown15: u16,
    pub r#unknown16: bool,
    pub r#lgb_event_npc0: Vec<u32>,
    pub r#unknown25: u16,
    pub r#unknown26: u16,
    pub r#unknown27: u16,
    pub r#unknown28: u16,
    pub r#unknown29: u16,
    pub r#unknown30: u16,
    pub r#unknown31: u16,
    pub r#unknown32: u16,
    pub r#unknown33: u16,
    pub r#unknown34: u16,
    pub r#unknown35: u16,
    pub r#unknown36: u16,
    pub r#unknown37: u16,
    pub r#unknown38: u16,
    pub r#unknown39: u16,
    pub r#unknown40: u16,
    pub r#unknown41: u8,
    pub r#unknown42: u8,
    pub r#unknown43: u8,
    pub r#unknown44: u8,
    pub r#unknown45: u8,
    pub r#unknown46: u8,
    pub r#unknown47: u8,
    pub r#unknown48: u8,
    pub r#unknown49: u16,
    pub r#unknown50: u16,
    pub r#unknown51: u16,
    pub r#unknown52: u16,
    pub r#unknown53: u16,
    pub r#unknown54: u16,
    pub r#unknown55: u16,
    pub r#unknown56: u16,
    pub r#unknown57: u16,
    pub r#unknown58: u16,
    pub r#unknown59: u16,
    pub r#unknown60: u16,
    pub r#unknown61: u16,
    pub r#unknown62: u16,
    pub r#unknown63: u16,
    pub r#unknown64: u16,
    pub r#unknown65: u8,
    pub r#unknown66: u8,
    pub r#unknown67: u8,
    pub r#unknown68: u8,
    pub r#unknown69: u8,
    pub r#unknown70: u8,
    pub r#unknown71: u8,
    pub r#unknown72: u8,
    pub r#lgb_event_npc1: Vec<u32>,
    pub r#unknown81: u16,
    pub r#unknown82: u16,
    pub r#unknown83: u16,
    pub r#unknown84: u16,
    pub r#unknown85: u8,
    pub r#unknown86: u8,
    pub r#unknown87: u8,
    pub r#unknown88: u8,
    pub r#unknown89: u32,
    pub r#unknown90: u32,
    pub r#unknown91: u32,
    pub r#unknown92: u32,
    pub r#objective0: SeString,
    pub r#hint0: SeString,
    pub r#objective1: SeString,
    pub r#hint1: SeString,
    pub r#unknown97: SeString,
    pub r#unknown98: SeString,
    pub r#unknown99: SeString,
    pub r#unknown100: SeString,
    pub r#unknown101: SeString,
    pub r#unknown102: SeString,
    pub r#unknown103: SeString,
    pub r#action_text: SeString,
}
impl Snipe {
    pub fn populate(row: &Row, offset: usize) -> Result<Self, PopulateError> {
        Result::Ok(Self {
            r#lgb_target_marker: row.field(0usize + offset)?.into_u32()?,
            r#unknown1: row.field(1usize + offset)?.into_u16()?,
            r#unknown2: row.field(2usize + offset)?.into_bool()?,
            r#unknown3: row.field(3usize + offset)?.into_u8()?,
            r#unknown4: row.field(4usize + offset)?.into_u8()?,
            r#unknown5: row.field(5usize + offset)?.into_u8()?,
            r#unknown6: row.field(6usize + offset)?.into_u8()?,
            r#unknown7: row.field(7usize + offset)?.into_u8()?,
            r#unknown8: row.field(8usize + offset)?.into_u16()?,
            r#unknown9: row.field(9usize + offset)?.into_u8()?,
            r#unknown10: row.field(10usize + offset)?.into_u8()?,
            r#vfx_fire: row.field(11usize + offset)?.into_string()?,
            r#vfx_hit: row.field(12usize + offset)?.into_string()?,
            r#vfx_miss: row.field(13usize + offset)?.into_string()?,
            r#vfx_additional: row.field(14usize + offset)?.into_string()?,
            r#unknown15: row.field(15usize + offset)?.into_u16()?,
            r#unknown16: row.field(16usize + offset)?.into_bool()?,
            r#lgb_event_npc0: read_array(
                offset,
                8usize,
                1usize,
                |offset| { Result::Ok(row.field(17usize + offset)?.into_u32()?) },
            )?,
            r#unknown25: row.field(25usize + offset)?.into_u16()?,
            r#unknown26: row.field(26usize + offset)?.into_u16()?,
            r#unknown27: row.field(27usize + offset)?.into_u16()?,
            r#unknown28: row.field(28usize + offset)?.into_u16()?,
            r#unknown29: row.field(29usize + offset)?.into_u16()?,
            r#unknown30: row.field(30usize + offset)?.into_u16()?,
            r#unknown31: row.field(31usize + offset)?.into_u16()?,
            r#unknown32: row.field(32usize + offset)?.into_u16()?,
            r#unknown33: row.field(33usize + offset)?.into_u16()?,
            r#unknown34: row.field(34usize + offset)?.into_u16()?,
            r#unknown35: row.field(35usize + offset)?.into_u16()?,
            r#unknown36: row.field(36usize + offset)?.into_u16()?,
            r#unknown37: row.field(37usize + offset)?.into_u16()?,
            r#unknown38: row.field(38usize + offset)?.into_u16()?,
            r#unknown39: row.field(39usize + offset)?.into_u16()?,
            r#unknown40: row.field(40usize + offset)?.into_u16()?,
            r#unknown41: row.field(41usize + offset)?.into_u8()?,
            r#unknown42: row.field(42usize + offset)?.into_u8()?,
            r#unknown43: row.field(43usize + offset)?.into_u8()?,
            r#unknown44: row.field(44usize + offset)?.into_u8()?,
            r#unknown45: row.field(45usize + offset)?.into_u8()?,
            r#unknown46: row.field(46usize + offset)?.into_u8()?,
            r#unknown47: row.field(47usize + offset)?.into_u8()?,
            r#unknown48: row.field(48usize + offset)?.into_u8()?,
            r#unknown49: row.field(49usize + offset)?.into_u16()?,
            r#unknown50: row.field(50usize + offset)?.into_u16()?,
            r#unknown51: row.field(51usize + offset)?.into_u16()?,
            r#unknown52: row.field(52usize + offset)?.into_u16()?,
            r#unknown53: row.field(53usize + offset)?.into_u16()?,
            r#unknown54: row.field(54usize + offset)?.into_u16()?,
            r#unknown55: row.field(55usize + offset)?.into_u16()?,
            r#unknown56: row.field(56usize + offset)?.into_u16()?,
            r#unknown57: row.field(57usize + offset)?.into_u16()?,
            r#unknown58: row.field(58usize + offset)?.into_u16()?,
            r#unknown59: row.field(59usize + offset)?.into_u16()?,
            r#unknown60: row.field(60usize + offset)?.into_u16()?,
            r#unknown61: row.field(61usize + offset)?.into_u16()?,
            r#unknown62: row.field(62usize + offset)?.into_u16()?,
            r#unknown63: row.field(63usize + offset)?.into_u16()?,
            r#unknown64: row.field(64usize + offset)?.into_u16()?,
            r#unknown65: row.field(65usize + offset)?.into_u8()?,
            r#unknown66: row.field(66usize + offset)?.into_u8()?,
            r#unknown67: row.field(67usize + offset)?.into_u8()?,
            r#unknown68: row.field(68usize + offset)?.into_u8()?,
            r#unknown69: row.field(69usize + offset)?.into_u8()?,
            r#unknown70: row.field(70usize + offset)?.into_u8()?,
            r#unknown71: row.field(71usize + offset)?.into_u8()?,
            r#unknown72: row.field(72usize + offset)?.into_u8()?,
            r#lgb_event_npc1: read_array(
                offset,
                8usize,
                1usize,
                |offset| { Result::Ok(row.field(73usize + offset)?.into_u32()?) },
            )?,
            r#unknown81: row.field(81usize + offset)?.into_u16()?,
            r#unknown82: row.field(82usize + offset)?.into_u16()?,
            r#unknown83: row.field(83usize + offset)?.into_u16()?,
            r#unknown84: row.field(84usize + offset)?.into_u16()?,
            r#unknown85: row.field(85usize + offset)?.into_u8()?,
            r#unknown86: row.field(86usize + offset)?.into_u8()?,
            r#unknown87: row.field(87usize + offset)?.into_u8()?,
            r#unknown88: row.field(88usize + offset)?.into_u8()?,
            r#unknown89: row.field(89usize + offset)?.into_u32()?,
            r#unknown90: row.field(90usize + offset)?.into_u32()?,
            r#unknown91: row.field(91usize + offset)?.into_u32()?,
            r#unknown92: row.field(92usize + offset)?.into_u32()?,
            r#objective0: row.field(93usize + offset)?.into_string()?,
            r#hint0: row.field(94usize + offset)?.into_string()?,
            r#objective1: row.field(95usize + offset)?.into_string()?,
            r#hint1: row.field(96usize + offset)?.into_string()?,
            r#unknown97: row.field(97usize + offset)?.into_string()?,
            r#unknown98: row.field(98usize + offset)?.into_string()?,
            r#unknown99: row.field(99usize + offset)?.into_string()?,
            r#unknown100: row.field(100usize + offset)?.into_string()?,
            r#unknown101: row.field(101usize + offset)?.into_string()?,
            r#unknown102: row.field(102usize + offset)?.into_string()?,
            r#unknown103: row.field(103usize + offset)?.into_string()?,
            r#action_text: row.field(104usize + offset)?.into_string()?,
        })
    }
}
