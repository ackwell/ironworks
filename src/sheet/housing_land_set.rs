use std::result::Result;
use crate::utility::read_array;
use ironworks::excel::Row;
use crate::metadata::MetadataAdapter;
use std::vec::Vec;
use crate::error::PopulateError;
impl MetadataAdapter for HousingLandSet {
    fn name() -> String {
        "HousingLandSet".to_string()
    }
    fn populate(row: &Row) -> Result<Self, PopulateError> {
        let offset = 0;
        Result::Ok(HousingLandSet::populate(row, offset)?)
    }
}
#[derive(Debug)]
pub struct HousingLandSet {
    pub r#plot_size: Vec<u8>,
    pub r#min_price: Vec<u32>,
    pub r#unknown120: u32,
    pub r#unknown121: u32,
    pub r#unknown122: u32,
    pub r#unknown123: u32,
    pub r#unknown124: u32,
    pub r#unknown125: u32,
    pub r#unknown126: u32,
    pub r#unknown127: u32,
    pub r#unknown128: u32,
    pub r#unknown129: u32,
    pub r#unknown130: u32,
    pub r#unknown131: u32,
    pub r#unknown132: u32,
    pub r#unknown133: u32,
    pub r#unknown134: u32,
    pub r#unknown135: u32,
    pub r#unknown136: u32,
    pub r#unknown137: u32,
    pub r#unknown138: u32,
    pub r#unknown139: u32,
    pub r#unknown140: u32,
    pub r#unknown141: u32,
    pub r#unknown142: u32,
    pub r#unknown143: u32,
    pub r#unknown144: u32,
    pub r#unknown145: u32,
    pub r#unknown146: u32,
    pub r#unknown147: u32,
    pub r#unknown148: u32,
    pub r#unknown149: u32,
    pub r#unknown150: u32,
    pub r#unknown151: u32,
    pub r#unknown152: u32,
    pub r#unknown153: u32,
    pub r#unknown154: u32,
    pub r#unknown155: u32,
    pub r#unknown156: u32,
    pub r#unknown157: u32,
    pub r#unknown158: u32,
    pub r#unknown159: u32,
    pub r#unknown160: u32,
    pub r#unknown161: u32,
    pub r#unknown162: u32,
    pub r#unknown163: u32,
    pub r#unknown164: u32,
    pub r#unknown165: u32,
    pub r#unknown166: u32,
    pub r#unknown167: u32,
    pub r#unknown168: u32,
    pub r#unknown169: u32,
    pub r#unknown170: u32,
    pub r#unknown171: u32,
    pub r#unknown172: u32,
    pub r#unknown173: u32,
    pub r#unknown174: u32,
    pub r#unknown175: u32,
    pub r#unknown176: u32,
    pub r#unknown177: u32,
    pub r#unknown178: u32,
    pub r#unknown179: u32,
    pub r#unknown180: u32,
    pub r#unknown181: u32,
    pub r#unknown182: u32,
    pub r#unknown183: u32,
    pub r#unknown184: u32,
    pub r#unknown185: u32,
    pub r#unknown186: u32,
    pub r#unknown187: u32,
    pub r#unknown188: u32,
    pub r#unknown189: u32,
    pub r#unknown190: u32,
    pub r#unknown191: u32,
    pub r#unknown192: u32,
    pub r#unknown193: u32,
    pub r#unknown194: u32,
    pub r#unknown195: u32,
    pub r#unknown196: u32,
    pub r#unknown197: u32,
    pub r#unknown198: u32,
    pub r#unknown199: u32,
    pub r#unknown200: u32,
    pub r#unknown201: u32,
    pub r#unknown202: u32,
    pub r#unknown203: u32,
    pub r#unknown204: u32,
    pub r#unknown205: u32,
    pub r#unknown206: u32,
    pub r#unknown207: u32,
    pub r#unknown208: u32,
    pub r#unknown209: u32,
    pub r#unknown210: u32,
    pub r#unknown211: u32,
    pub r#unknown212: u32,
    pub r#unknown213: u32,
    pub r#unknown214: u32,
    pub r#unknown215: u32,
    pub r#unknown216: u32,
    pub r#unknown217: u32,
    pub r#unknown218: u32,
    pub r#unknown219: u32,
    pub r#unknown220: u32,
    pub r#unknown221: u32,
    pub r#unknown222: u32,
    pub r#unknown223: u32,
    pub r#unknown224: u32,
    pub r#unknown225: u32,
    pub r#unknown226: u32,
    pub r#unknown227: u32,
    pub r#unknown228: u32,
    pub r#unknown229: u32,
    pub r#unknown230: u32,
    pub r#unknown231: u32,
    pub r#unknown232: u32,
    pub r#unknown233: u32,
    pub r#unknown234: u32,
    pub r#unknown235: u32,
    pub r#unknown236: u32,
    pub r#unknown237: u32,
    pub r#unknown238: u32,
    pub r#unknown239: u32,
    pub r#initial_price: Vec<u32>,
}
impl HousingLandSet {
    pub fn populate(row: &Row, offset: usize) -> Result<Self, PopulateError> {
        Result::Ok(Self {
            r#plot_size: read_array(
                offset,
                60usize,
                1usize,
                |offset| { Result::Ok(row.field(0usize + offset)?.into_u8()?) },
            )?,
            r#min_price: read_array(
                offset,
                60usize,
                1usize,
                |offset| { Result::Ok(row.field(60usize + offset)?.into_u32()?) },
            )?,
            r#unknown120: row.field(120usize + offset)?.into_u32()?,
            r#unknown121: row.field(121usize + offset)?.into_u32()?,
            r#unknown122: row.field(122usize + offset)?.into_u32()?,
            r#unknown123: row.field(123usize + offset)?.into_u32()?,
            r#unknown124: row.field(124usize + offset)?.into_u32()?,
            r#unknown125: row.field(125usize + offset)?.into_u32()?,
            r#unknown126: row.field(126usize + offset)?.into_u32()?,
            r#unknown127: row.field(127usize + offset)?.into_u32()?,
            r#unknown128: row.field(128usize + offset)?.into_u32()?,
            r#unknown129: row.field(129usize + offset)?.into_u32()?,
            r#unknown130: row.field(130usize + offset)?.into_u32()?,
            r#unknown131: row.field(131usize + offset)?.into_u32()?,
            r#unknown132: row.field(132usize + offset)?.into_u32()?,
            r#unknown133: row.field(133usize + offset)?.into_u32()?,
            r#unknown134: row.field(134usize + offset)?.into_u32()?,
            r#unknown135: row.field(135usize + offset)?.into_u32()?,
            r#unknown136: row.field(136usize + offset)?.into_u32()?,
            r#unknown137: row.field(137usize + offset)?.into_u32()?,
            r#unknown138: row.field(138usize + offset)?.into_u32()?,
            r#unknown139: row.field(139usize + offset)?.into_u32()?,
            r#unknown140: row.field(140usize + offset)?.into_u32()?,
            r#unknown141: row.field(141usize + offset)?.into_u32()?,
            r#unknown142: row.field(142usize + offset)?.into_u32()?,
            r#unknown143: row.field(143usize + offset)?.into_u32()?,
            r#unknown144: row.field(144usize + offset)?.into_u32()?,
            r#unknown145: row.field(145usize + offset)?.into_u32()?,
            r#unknown146: row.field(146usize + offset)?.into_u32()?,
            r#unknown147: row.field(147usize + offset)?.into_u32()?,
            r#unknown148: row.field(148usize + offset)?.into_u32()?,
            r#unknown149: row.field(149usize + offset)?.into_u32()?,
            r#unknown150: row.field(150usize + offset)?.into_u32()?,
            r#unknown151: row.field(151usize + offset)?.into_u32()?,
            r#unknown152: row.field(152usize + offset)?.into_u32()?,
            r#unknown153: row.field(153usize + offset)?.into_u32()?,
            r#unknown154: row.field(154usize + offset)?.into_u32()?,
            r#unknown155: row.field(155usize + offset)?.into_u32()?,
            r#unknown156: row.field(156usize + offset)?.into_u32()?,
            r#unknown157: row.field(157usize + offset)?.into_u32()?,
            r#unknown158: row.field(158usize + offset)?.into_u32()?,
            r#unknown159: row.field(159usize + offset)?.into_u32()?,
            r#unknown160: row.field(160usize + offset)?.into_u32()?,
            r#unknown161: row.field(161usize + offset)?.into_u32()?,
            r#unknown162: row.field(162usize + offset)?.into_u32()?,
            r#unknown163: row.field(163usize + offset)?.into_u32()?,
            r#unknown164: row.field(164usize + offset)?.into_u32()?,
            r#unknown165: row.field(165usize + offset)?.into_u32()?,
            r#unknown166: row.field(166usize + offset)?.into_u32()?,
            r#unknown167: row.field(167usize + offset)?.into_u32()?,
            r#unknown168: row.field(168usize + offset)?.into_u32()?,
            r#unknown169: row.field(169usize + offset)?.into_u32()?,
            r#unknown170: row.field(170usize + offset)?.into_u32()?,
            r#unknown171: row.field(171usize + offset)?.into_u32()?,
            r#unknown172: row.field(172usize + offset)?.into_u32()?,
            r#unknown173: row.field(173usize + offset)?.into_u32()?,
            r#unknown174: row.field(174usize + offset)?.into_u32()?,
            r#unknown175: row.field(175usize + offset)?.into_u32()?,
            r#unknown176: row.field(176usize + offset)?.into_u32()?,
            r#unknown177: row.field(177usize + offset)?.into_u32()?,
            r#unknown178: row.field(178usize + offset)?.into_u32()?,
            r#unknown179: row.field(179usize + offset)?.into_u32()?,
            r#unknown180: row.field(180usize + offset)?.into_u32()?,
            r#unknown181: row.field(181usize + offset)?.into_u32()?,
            r#unknown182: row.field(182usize + offset)?.into_u32()?,
            r#unknown183: row.field(183usize + offset)?.into_u32()?,
            r#unknown184: row.field(184usize + offset)?.into_u32()?,
            r#unknown185: row.field(185usize + offset)?.into_u32()?,
            r#unknown186: row.field(186usize + offset)?.into_u32()?,
            r#unknown187: row.field(187usize + offset)?.into_u32()?,
            r#unknown188: row.field(188usize + offset)?.into_u32()?,
            r#unknown189: row.field(189usize + offset)?.into_u32()?,
            r#unknown190: row.field(190usize + offset)?.into_u32()?,
            r#unknown191: row.field(191usize + offset)?.into_u32()?,
            r#unknown192: row.field(192usize + offset)?.into_u32()?,
            r#unknown193: row.field(193usize + offset)?.into_u32()?,
            r#unknown194: row.field(194usize + offset)?.into_u32()?,
            r#unknown195: row.field(195usize + offset)?.into_u32()?,
            r#unknown196: row.field(196usize + offset)?.into_u32()?,
            r#unknown197: row.field(197usize + offset)?.into_u32()?,
            r#unknown198: row.field(198usize + offset)?.into_u32()?,
            r#unknown199: row.field(199usize + offset)?.into_u32()?,
            r#unknown200: row.field(200usize + offset)?.into_u32()?,
            r#unknown201: row.field(201usize + offset)?.into_u32()?,
            r#unknown202: row.field(202usize + offset)?.into_u32()?,
            r#unknown203: row.field(203usize + offset)?.into_u32()?,
            r#unknown204: row.field(204usize + offset)?.into_u32()?,
            r#unknown205: row.field(205usize + offset)?.into_u32()?,
            r#unknown206: row.field(206usize + offset)?.into_u32()?,
            r#unknown207: row.field(207usize + offset)?.into_u32()?,
            r#unknown208: row.field(208usize + offset)?.into_u32()?,
            r#unknown209: row.field(209usize + offset)?.into_u32()?,
            r#unknown210: row.field(210usize + offset)?.into_u32()?,
            r#unknown211: row.field(211usize + offset)?.into_u32()?,
            r#unknown212: row.field(212usize + offset)?.into_u32()?,
            r#unknown213: row.field(213usize + offset)?.into_u32()?,
            r#unknown214: row.field(214usize + offset)?.into_u32()?,
            r#unknown215: row.field(215usize + offset)?.into_u32()?,
            r#unknown216: row.field(216usize + offset)?.into_u32()?,
            r#unknown217: row.field(217usize + offset)?.into_u32()?,
            r#unknown218: row.field(218usize + offset)?.into_u32()?,
            r#unknown219: row.field(219usize + offset)?.into_u32()?,
            r#unknown220: row.field(220usize + offset)?.into_u32()?,
            r#unknown221: row.field(221usize + offset)?.into_u32()?,
            r#unknown222: row.field(222usize + offset)?.into_u32()?,
            r#unknown223: row.field(223usize + offset)?.into_u32()?,
            r#unknown224: row.field(224usize + offset)?.into_u32()?,
            r#unknown225: row.field(225usize + offset)?.into_u32()?,
            r#unknown226: row.field(226usize + offset)?.into_u32()?,
            r#unknown227: row.field(227usize + offset)?.into_u32()?,
            r#unknown228: row.field(228usize + offset)?.into_u32()?,
            r#unknown229: row.field(229usize + offset)?.into_u32()?,
            r#unknown230: row.field(230usize + offset)?.into_u32()?,
            r#unknown231: row.field(231usize + offset)?.into_u32()?,
            r#unknown232: row.field(232usize + offset)?.into_u32()?,
            r#unknown233: row.field(233usize + offset)?.into_u32()?,
            r#unknown234: row.field(234usize + offset)?.into_u32()?,
            r#unknown235: row.field(235usize + offset)?.into_u32()?,
            r#unknown236: row.field(236usize + offset)?.into_u32()?,
            r#unknown237: row.field(237usize + offset)?.into_u32()?,
            r#unknown238: row.field(238usize + offset)?.into_u32()?,
            r#unknown239: row.field(239usize + offset)?.into_u32()?,
            r#initial_price: read_array(
                offset,
                60usize,
                1usize,
                |offset| { Result::Ok(row.field(240usize + offset)?.into_u32()?) },
            )?,
        })
    }
}
